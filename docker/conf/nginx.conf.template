user  nginx;
worker_processes  10;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format auth_header 'NGINX: [$time_local] “$request”  auth:"$user_id@$auth_cookie" from:"$remote_addr $http_x_forwarded_for" '
                      'ret:"code:$status size:$body_bytes_sent" info:[$http_referer][$http_user_agent]';
#    access_log  /var/log/nginx/access.log  main;
    access_log /dev/null;
    rewrite_log on;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;

    client_max_body_size 10M;

    # rate limit setting, 150 request per second
    limit_req_zone  $binary_remote_addr  zone=req_one:10m rate=150r/s;
    # server {
    #     listen 80;
    #     listen [::]:80;

    #     # redirect to HTTPS
    #     rewrite ^(.*) https://$host$1 permanent;
    # }

    server {
        access_log /var/log/nginx/access.log auth_header;
        set $auth_cookie "";
        set $user_id "";
        if ($http_cookie ~* "appid=([a-z0-9]+)(?:;|$)") {
            set $auth_cookie $1;
        }

        if ($http_cookie ~* "userid=([.%\-a-zA-Z0-9_]+)(?:;|$)") {
            set $user_id $1;
        }

        if ($http_authorization != "") {
            set $auth_cookie $http_authorization;
        }

        if ($http_x_userid != "") {
            set $user_id $http_x_userid;
        }

        listen 80;
        #listen [::]:80;
        location /admin {
            # auth_request /auth/v1/appid/validate;
            proxy_pass http://127.0.0.1:8088;
            proxy_set_header Authorization $auth_cookie;
            proxy_set_header X-Appid $auth_cookie;
        }

        location /auth/v1/appid/validate {
            proxy_pass http://127.0.0.1:8088;
            proxy_pass_request_body off;
            proxy_set_header Authorization $auth_cookie;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        location /stats {
            proxy_pass http://${ADMIN_STAT_SERVER_URL}:15501;
        }

        # ========== legacy houta ==========
        location /php/api/ApiKey/task_engine_app.php { 
            proxy_set_header Authorization $auth_cookie; 
            proxy_set_header X-Appid $auth_cookie; 
            proxy_set_header X-UserID $user_id; 
            proxy_set_header X-Real-IP $remote_addr; 
            proxy_pass http://127.0.0.1:8181/api/v1/task/apps; 
        }
        location /php/api/ApiKey/task_engine_scenario.php { 
            proxy_set_header Authorization $auth_cookie; 
            proxy_set_header X-Appid $auth_cookie; 
            proxy_set_header X-UserID $user_id; 
            proxy_set_header X-Real-IP $remote_addr; 
            proxy_pass http://127.0.0.1:8181/api/v1/task/apps; 
        }
        location /php/api/ApiKey/scenario_json_upload.php { 
            proxy_set_header Authorization $auth_cookie; 
            proxy_set_header X-Appid $auth_cookie; 
            proxy_set_header X-UserID $user_id; 
            proxy_set_header X-Real-IP $remote_addr; 
            proxy_pass http://127.0.0.1:8181/api/v1/task/scenarios-upload; 
        }

        # legacy php code, from 2.0 UI
        location ~ ^/php/ {
            if ($auth_cookie = "") {
                return 401;
            }
            if ($user_id = "") {
                return 401;
            }
            # TODO: handle invalid cookie/user_id

            set $is_exists 0;
            rewrite \/php\/(.*) /$1 break;

            include fastcgi_params;
            fastcgi_param HTTP_HOST 172.17.0.1;
            fastcgi_param HTTP_X_APPID $auth_cookie;
            fastcgi_param HTTP_X_USERID $user_id;
            fastcgi_param HTTP_X_REAL_IP $remote_addr;

            root /build/dist;
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;

            # since rewrite might cause leading / and proxy pass will cause double //, check even root/scrip or rootscrip either.
            if (-f $document_root$fastcgi_script_name) {
                set $is_exists 1;
            }
            if (-f $document_root/$fastcgi_script_name) {
                set $is_exists 1;
            }

            if ($is_exists != 1) {
                return 404;
            }

            fastcgi_pass 127.0.0.1:9000;
            fastcgi_param REQUEST_METHOD $request_method;
            fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
            fastcgi_param QUERY_STRING $query_string;
            # fastcgi_param SERVER_NAME 172.17.0.1;
        }

        # response/sdk(vip-adapter) call directly without any auth cookie
        location ~ ^/(api/ApiKey|api/APP)/ {
            root /build/dist;
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_param REQUEST_METHOD $request_method;
            fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
            fastcgi_param QUERY_STRING $query_string;
            fastcgi_param SERVER_NAME 172.17.0.1;
        }

        # golang /api/v1
        location /api {
            add_header Cache-Control no-store;  
            add_header Cache-Control private;  
            proxy_set_header Authorization $auth_cookie;
            proxy_set_header X-Appid $auth_cookie;
            proxy_set_header X-UserID $user_id;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://127.0.0.1:8181;
        }

        # /Files will go here
        location / {
            root   /build/dist;
            index  index.html index.htm;
        }

        ## error_page 403 /403.html;
    }
}
